{"version":3,"sources":["src/_scripts/node_modules/browser-pack/_prelude.js","src/_scripts/node_modules/split-html-to-chars/index.js","src/_scripts/src/_scripts/Gradient.js","src/_scripts/src/_scripts/Sprite_animation.js","src/_scripts/src/_scripts/main.js"],"names":[],"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar attrRE = /([\\w-]+)|['\"]{1}([^'\"]*)['\"]{1}/g;\n\n// create optimized lookup object for\n// void elements as listed here: \n// http://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\nvar lookup = (Object.create) ? Object.create(null) : {};\nlookup.area = true;\nlookup.base = true;\nlookup.br = true;\nlookup.col = true;\nlookup.embed = true;\nlookup.hr = true;\nlookup.img = true;\nlookup.input = true;\nlookup.keygen = true;\nlookup.link = true;\nlookup.menuitem = true;\nlookup.meta = true;\nlookup.param = true;\nlookup.source = true;\nlookup.track = true;\nlookup.wbr = true;\n\nvar parseTag = function (tag) {\n    var i = 0;\n    var key;\n    var res = {\n        type: 'tag',\n        name: '',\n        voidElement: false,\n        attrs: {},\n        children: []\n    };\n\n    tag.replace(attrRE, function (match) {\n        if (i % 2) {\n            key = match;\n        } else {\n            if (i === 0) {\n                if (lookup[match] || tag.charAt(tag.length - 2) === '/') {\n                    res.voidElement = true;\n                }\n                res.name = match;\n            } else {\n                res.attrs[key] = match.replace(/['\"]/g, '');\n            }\n        }\n        i++;\n    });\n\n    return res;\n};\n\n/*jshint -W030 */\nvar tagRE = /<(?:\"[^\"]*\"['\"]*|'[^']*'['\"]*|[^'\">])+>/g;\n\n// re-used obj for quick lookups of components\nvar empty = Object.create ? Object.create(null) : {};\n\nvar parse = function parse(html, options) {\n    options || (options = {});\n    options.components || (options.components = empty);\n    var result = [];\n    var current;\n    var level = -1;\n    var arr = [];\n    var byTag = {};\n    var inComponent = false;\n\n    html.replace(tagRE, function (tag, index) {\n        if (inComponent) {\n            if (tag !== ('</' + current.name + '>')) {\n                return;\n            } else {\n                inComponent = false;\n            }\n        }\n        var isOpen = tag.charAt(1) !== '/';\n        var start = index + tag.length;\n        var nextChar = html.charAt(start);\n        var parent;\n\n        if (isOpen) {\n            level++;\n\n            current = parseTag(tag);\n            if (current.type === 'tag' && options.components[current.name]) {\n                current.type = 'component';\n                inComponent = true;\n            }\n\n            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {\n                current.children.push({\n                    type: 'text',\n                    content: html.slice(start, html.indexOf('<', start))\n                });\n            }\n\n            byTag[current.tagName] = current;\n\n            // if we're at root, push new base node\n            if (level === 0) {\n                result.push(current);\n            }\n\n            parent = arr[level - 1];\n\n            if (parent) {\n                parent.children.push(current);\n            }\n\n            arr[level] = current;\n        }\n\n        if (!isOpen || current.voidElement) {\n            level--;\n            if (!inComponent && nextChar !== '<' && nextChar) {\n                // trailing text node\n                arr[level].children.push({\n                    type: 'text',\n                    content: html.slice(start, html.indexOf('<', start))\n                });\n            }\n        }\n    });\n\n    return result;\n};\n\nfunction attrString(attrs) {\n    var buff = [];\n    for (var key in attrs) {\n        buff.push(key + '=\"' + attrs[key] + '\"');\n    }\n    if (!buff.length) {\n        return '';\n    }\n    return ' ' + buff.join(' ');\n}\n\nfunction stringify(buff, doc) {\n    switch (doc.type) {\n    case 'text':\n        return buff + doc.content;\n    case 'tag':\n        buff += '<' + doc.name + (doc.attrs ? attrString(doc.attrs) : '') + (doc.voidElement ? '/>' : '>');\n        if (doc.voidElement) {\n            return buff;\n        }\n        return buff + doc.children.reduce(stringify, '') + '</' + doc.name + '>';\n    }\n}\n\nvar stringify_1 = function (doc) {\n    return doc.reduce(function (token, rootEl) {\n        return token + stringify('', rootEl);\n    }, '');\n};\n\nvar index = {\n    parse: parse,\n    stringify: stringify_1\n};\n\nArray.prototype.clean = function (deleteValue) {\n\tfor (var i = 0; i < this.length; i++) {\n\t\tif (this[i] == deleteValue) {\n\t\t\tthis.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\t}\n\treturn this;\n};\n\nfunction recur(obj, template, words) {\n\t// template = (template =='')? '$' : template;\n\tif (obj.type == \"text\") {\n\t\tobj.content = obj.content.split(/(?!$)/).map(function (char) {\n\t\t\treturn template.replace(/\\$/g, char);\n\t\t}).join(\"\");\n\n\t\tif (words) {\n\t\t\tobj.content = obj.content.split(template.replace(/\\$/g, ' ')).clean(\"\").map(function (parsedword) {\n\t\t\t\treturn words.replace(/\\$/g, parsedword);\n\t\t\t}).join(\"\");\n\t\t}\n\t}\n\tif (obj.children) {\n\t\tobj.children.forEach(function (tag) {\n\t\t\trecur(tag, template, words);\n\t\t});\n\t}\n}\n\nfunction Splitter(html, template, words) {\n\tvar ast = index.parse(html);\n\tast.forEach(function (tag) {\n\t\trecur(tag, template, words);\n\t});\n\treturn index.stringify(ast);\n}\n\nmodule.exports = Splitter;\n","import Splitter from 'split-html-to-chars';\n\nexport default class Gradient_letters {\n  constructor(string_selector, color_start, color_end, options) {\n    this.string_selector = string_selector;\n    this.string = document.querySelectorAll(this.string_selector);\n    this.color_start = color_start;\n    this.color_end = color_end;\n\n    this.init();\n  }\n\n  init() {\n    this.split_string();\n    this.create_gradient()\n  }\n\n  split_string() {\n    [].forEach.call(this.string, function (el) {\n      el.outerHTML = Splitter(el.outerHTML, '<span class=\"letter\">$</span>');\n    });\n  }\n\n  create_gradient() {\n    let el = document.querySelector(this.string_selector),\n        el_childNodes = el.childNodes,\n        el_childNodes_length = el.childNodes.length,\n        color_start_hex = this.color_start.slice(1),\n        color_end_hex = this.color_end.slice(1);\n\n\n\n    let color_start_rgb_hex = {\n      r: color_start_hex[0] + color_start_hex[1],\n      g: color_start_hex[2] + color_start_hex[3],\n      b: color_start_hex[4] + color_start_hex[5],\n    };\n\n    let color_end_rgb_hex = {\n      r: color_end_hex[0] + color_end_hex[1],\n      g: color_end_hex[2] + color_end_hex[3],\n      b: color_end_hex[4] + color_end_hex[5],\n    };\n\n\n    let color_start_rgb = {\n      r: parseInt(color_start_rgb_hex.r, 16),\n      g: parseInt(color_start_rgb_hex.g, 16),\n      b: parseInt(color_start_rgb_hex.b, 16),\n    };\n\n    let color_end_rgb = {\n      r: parseInt(color_end_rgb_hex.r, 16),\n      g: parseInt(color_end_rgb_hex.g, 16),\n      b: parseInt(color_end_rgb_hex.b, 16),\n    };\n\n    console.log( color_start_rgb, color_end_rgb );\n\n    let difference = {\n      r: color_start_rgb.r - color_end_rgb.r,\n      g: color_start_rgb.g - color_end_rgb.g,\n      b: color_start_rgb.b - color_end_rgb.b,\n    };\n\n    let k = 1/(el_childNodes_length - 1);\n\n\n\n    for (let i = 0; i < el_childNodes_length; i++) {\n      if ( i === 0  ) {\n        el_childNodes[i].style.color = `rgb(${color_start_rgb.r}, ${color_start_rgb.g}, ${color_start_rgb.b} )`;\n        continue;\n      }\n\n      let color = {\n        r: color_start_rgb.r - (difference.r *(k * (i) )),\n        g: color_start_rgb.g - (difference.g *(k * (i) )),\n        b: color_start_rgb.b - (difference.b *(k * (i) )),\n      };\n\n      el_childNodes[i].style.color = `rgb(${color.r}, ${color.g}, ${color.b} )`;\n    }\n\n  }\n\n}\n\n","export default class Sprite_animation {\n  constructor(args) {\n    this.container = args.container;\n    this.img = args.img;\n    this.img_width = args.img_width;\n    this.img_height = args.img_height;\n    this.col = args.col;\n    this.row = args.row;\n    this.scale = args.scale || 1;\n    this.classes = args.class ? args.class.split(' ') : '';\n    this.speed = args.speed || 50;\n\n    this.init();\n  }\n\n  add_container_style() {\n    this.container.style.width = `${(this.img_width / this.col)*this.scale}px`;\n    this.container.style.height = `${(this.img_height / this.row)*this.scale}px`;\n    this.container.style.position = `relative`;\n    this.container.style.overflow = `hidden`;\n  }\n\n  create_sprite() {\n    let sprite = document.createElement('img');\n    sprite.style.width = `${100 * this.col}%`;\n    sprite.style.height = `${100 * this.row}%`;\n    sprite.style.position = `absolute`;\n    sprite.style.top = `0`;\n    sprite.style.left = `0`;\n    sprite.setAttribute('src', this.img);\n    sprite.classList.add(`sprite_animation`);\n\n    if ( this.classes[0] != '' ) {\n      for (let i = 0; i < this.classes.length; i++) {\n        sprite.classList.add(this.classes[i]);\n      }\n    };\n\n    this.container.appendChild(sprite);\n    this.sprite = document.querySelector('.sprite_animation');\n  }\n\n  animation() {\n\n    let counter = 0;\n    let now_col = 0;\n    let now_row = 0;\n    let iteration = this.col * this.row;\n    let sprite_width = (this.img_width/this.col)*this.scale;\n    let sprite_height = (this.img_height/this.row)*this.scale;\n\n\n    let go_animation = () => {\n      setTimeout(() => {\n        this.sprite.style.transform = `translate3D(${-sprite_width*now_col}px, ${-sprite_height*now_row}px, 0)`;\n\n\n        if ( now_col === this.col - 1 ) {\n          now_col = 0;\n          now_row++;\n        } else {\n          now_col++;\n        }\n\n\n\n        counter++;\n        if ( counter < iteration ) {\n          go_animation();\n        }\n      }, this.speed);\n    };\n\n    go_animation();\n  }\n\n  init() {\n    this.add_container_style();\n    this.create_sprite();\n    this.animation();\n  }\n}\n","import Gradient from './Gradient';\nimport Sprite_animation from './Sprite_animation';\n\n\nlet title_animation = document.querySelector('.hero__lookbook-desktop');\n\nwindow.addEventListener('load', () => {\n  new Sprite_animation({\n    container: title_animation,\n    img: './images/sprite/sprite-lookbook.png',\n    img_width:1614,\n    img_height: 16800,\n    col: 2,\n    row: 42,\n    scale: 1,\n    speed: 35\n  });\n});\n\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJub2RlX21vZHVsZXMvc3BsaXQtaHRtbC10by1jaGFycy9pbmRleC5qcyIsInNyYy9fc2NyaXB0cy9HcmFkaWVudC5qcyIsInNyYy9fc2NyaXB0cy9TcHJpdGVfYW5pbWF0aW9uLmpzIiwic3JjL19zY3JpcHRzL21haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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LEtBSk87QUFLbkIsU0FBSyxDQUxjO0FBTW5CLFNBQUssRUFOYztBQU9uQixXQUFPLENBUFk7QUFRbkIsV0FBTztBQVJZLEdBQXJCO0FBVUQsQ0FYRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIid1c2Ugc3RyaWN0JztcblxudmFyIGF0dHJSRSA9IC8oW1xcdy1dKyl8WydcIl17MX0oW14nXCJdKilbJ1wiXXsxfS9nO1xuXG4vLyBjcmVhdGUgb3B0aW1pemVkIGxvb2t1cCBvYmplY3QgZm9yXG4vLyB2b2lkIGVsZW1lbnRzIGFzIGxpc3RlZCBoZXJlOiBcbi8vIGh0dHA6Ly93d3cudzMub3JnL2h0bWwvd2cvZHJhZnRzL2h0bWwvbWFzdGVyL3N5bnRheC5odG1sI3ZvaWQtZWxlbWVudHNcbnZhciBsb29rdXAgPSAoT2JqZWN0LmNyZWF0ZSkgPyBPYmplY3QuY3JlYXRlKG51bGwpIDoge307XG5sb29rdXAuYXJlYSA9IHRydWU7XG5sb29rdXAuYmFzZSA9IHRydWU7XG5sb29rdXAuYnIgPSB0cnVlO1xubG9va3VwLmNvbCA9IHRydWU7XG5sb29rdXAuZW1iZWQgPSB0cnVlO1xubG9va3VwLmhyID0gdHJ1ZTtcbmxvb2t1cC5pbWcgPSB0cnVlO1xubG9va3VwLmlucHV0ID0gdHJ1ZTtcbmxvb2t1cC5rZXlnZW4gPSB0cnVlO1xubG9va3VwLmxpbmsgPSB0cnVlO1xubG9va3VwLm1lbnVpdGVtID0gdHJ1ZTtcbmxvb2t1cC5tZXRhID0gdHJ1ZTtcbmxvb2t1cC5wYXJhbSA9IHRydWU7XG5sb29rdXAuc291cmNlID0gdHJ1ZTtcbmxvb2t1cC50cmFjayA9IHRydWU7XG5sb29rdXAud2JyID0gdHJ1ZTtcblxudmFyIHBhcnNlVGFnID0gZnVuY3Rpb24gKHRhZykge1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHZhciByZXMgPSB7XG4gICAgICAgIHR5cGU6ICd0YWcnLFxuICAgICAgICBuYW1lOiAnJyxcbiAgICAgICAgdm9pZEVsZW1lbnQ6IGZhbHNlLFxuICAgICAgICBhdHRyczoge30sXG4gICAgICAgIGNoaWxkcmVuOiBbXVxuICAgIH07XG5cbiAgICB0YWcucmVwbGFjZShhdHRyUkUsIGZ1bmN0aW9uIChtYXRjaCkge1xuICAgICAgICBpZiAoaSAlIDIpIHtcbiAgICAgICAgICAgIGtleSA9IG1hdGNoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGkgPT09IDApIHtcbiAgICAgICAgICAgICAgICBpZiAobG9va3VwW21hdGNoXSB8fCB0YWcuY2hhckF0KHRhZy5sZW5ndGggLSAyKSA9PT0gJy8nKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlcy52b2lkRWxlbWVudCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlcy5uYW1lID0gbWF0Y2g7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlcy5hdHRyc1trZXldID0gbWF0Y2gucmVwbGFjZSgvWydcIl0vZywgJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGkrKztcbiAgICB9KTtcblxuICAgIHJldHVybiByZXM7XG59O1xuXG4vKmpzaGludCAtVzAzMCAqL1xudmFyIHRhZ1JFID0gLzwoPzpcIlteXCJdKlwiWydcIl0qfCdbXiddKidbJ1wiXSp8W14nXCI+XSkrPi9nO1xuXG4vLyByZS11c2VkIG9iaiBmb3IgcXVpY2sgbG9va3VwcyBvZiBjb21wb25lbnRzXG52YXIgZW1wdHkgPSBPYmplY3QuY3JlYXRlID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IHt9O1xuXG52YXIgcGFyc2UgPSBmdW5jdGlvbiBwYXJzZShodG1sLCBvcHRpb25zKSB7XG4gICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KTtcbiAgICBvcHRpb25zLmNvbXBvbmVudHMgfHwgKG9wdGlvbnMuY29tcG9uZW50cyA9IGVtcHR5KTtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgdmFyIGN1cnJlbnQ7XG4gICAgdmFyIGxldmVsID0gLTE7XG4gICAgdmFyIGFyciA9IFtdO1xuICAgIHZhciBieVRhZyA9IHt9O1xuICAgIHZhciBpbkNvbXBvbmVudCA9IGZhbHNlO1xuXG4gICAgaHRtbC5yZXBsYWNlKHRhZ1JFLCBmdW5jdGlvbiAodGFnLCBpbmRleCkge1xuICAgICAgICBpZiAoaW5Db21wb25lbnQpIHtcbiAgICAgICAgICAgIGlmICh0YWcgIT09ICgnPC8nICsgY3VycmVudC5uYW1lICsgJz4nKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaW5Db21wb25lbnQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgaXNPcGVuID0gdGFnLmNoYXJBdCgxKSAhPT0gJy8nO1xuICAgICAgICB2YXIgc3RhcnQgPSBpbmRleCArIHRhZy5sZW5ndGg7XG4gICAgICAgIHZhciBuZXh0Q2hhciA9IGh0bWwuY2hhckF0KHN0YXJ0KTtcbiAgICAgICAgdmFyIHBhcmVudDtcblxuICAgICAgICBpZiAoaXNPcGVuKSB7XG4gICAgICAgICAgICBsZXZlbCsrO1xuXG4gICAgICAgICAgICBjdXJyZW50ID0gcGFyc2VUYWcodGFnKTtcbiAgICAgICAgICAgIGlmIChjdXJyZW50LnR5cGUgPT09ICd0YWcnICYmIG9wdGlvbnMuY29tcG9uZW50c1tjdXJyZW50Lm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudC50eXBlID0gJ2NvbXBvbmVudCc7XG4gICAgICAgICAgICAgICAgaW5Db21wb25lbnQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIWN1cnJlbnQudm9pZEVsZW1lbnQgJiYgIWluQ29tcG9uZW50ICYmIG5leHRDaGFyICYmIG5leHRDaGFyICE9PSAnPCcpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50LmNoaWxkcmVuLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IGh0bWwuc2xpY2Uoc3RhcnQsIGh0bWwuaW5kZXhPZignPCcsIHN0YXJ0KSlcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnlUYWdbY3VycmVudC50YWdOYW1lXSA9IGN1cnJlbnQ7XG5cbiAgICAgICAgICAgIC8vIGlmIHdlJ3JlIGF0IHJvb3QsIHB1c2ggbmV3IGJhc2Ugbm9kZVxuICAgICAgICAgICAgaWYgKGxldmVsID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goY3VycmVudCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHBhcmVudCA9IGFycltsZXZlbCAtIDFdO1xuXG4gICAgICAgICAgICBpZiAocGFyZW50KSB7XG4gICAgICAgICAgICAgICAgcGFyZW50LmNoaWxkcmVuLnB1c2goY3VycmVudCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFycltsZXZlbF0gPSBjdXJyZW50O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFpc09wZW4gfHwgY3VycmVudC52b2lkRWxlbWVudCkge1xuICAgICAgICAgICAgbGV2ZWwtLTtcbiAgICAgICAgICAgIGlmICghaW5Db21wb25lbnQgJiYgbmV4dENoYXIgIT09ICc8JyAmJiBuZXh0Q2hhcikge1xuICAgICAgICAgICAgICAgIC8vIHRyYWlsaW5nIHRleHQgbm9kZVxuICAgICAgICAgICAgICAgIGFycltsZXZlbF0uY2hpbGRyZW4ucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogaHRtbC5zbGljZShzdGFydCwgaHRtbC5pbmRleE9mKCc8Jywgc3RhcnQpKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcblxuZnVuY3Rpb24gYXR0clN0cmluZyhhdHRycykge1xuICAgIHZhciBidWZmID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIGF0dHJzKSB7XG4gICAgICAgIGJ1ZmYucHVzaChrZXkgKyAnPVwiJyArIGF0dHJzW2tleV0gKyAnXCInKTtcbiAgICB9XG4gICAgaWYgKCFidWZmLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHJldHVybiAnICcgKyBidWZmLmpvaW4oJyAnKTtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5KGJ1ZmYsIGRvYykge1xuICAgIHN3aXRjaCAoZG9jLnR5cGUpIHtcbiAgICBjYXNlICd0ZXh0JzpcbiAgICAgICAgcmV0dXJuIGJ1ZmYgKyBkb2MuY29udGVudDtcbiAgICBjYXNlICd0YWcnOlxuICAgICAgICBidWZmICs9ICc8JyArIGRvYy5uYW1lICsgKGRvYy5hdHRycyA/IGF0dHJTdHJpbmcoZG9jLmF0dHJzKSA6ICcnKSArIChkb2Mudm9pZEVsZW1lbnQgPyAnLz4nIDogJz4nKTtcbiAgICAgICAgaWYgKGRvYy52b2lkRWxlbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIGJ1ZmY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ1ZmYgKyBkb2MuY2hpbGRyZW4ucmVkdWNlKHN0cmluZ2lmeSwgJycpICsgJzwvJyArIGRvYy5uYW1lICsgJz4nO1xuICAgIH1cbn1cblxudmFyIHN0cmluZ2lmeV8xID0gZnVuY3Rpb24gKGRvYykge1xuICAgIHJldHVybiBkb2MucmVkdWNlKGZ1bmN0aW9uICh0b2tlbiwgcm9vdEVsKSB7XG4gICAgICAgIHJldHVybiB0b2tlbiArIHN0cmluZ2lmeSgnJywgcm9vdEVsKTtcbiAgICB9LCAnJyk7XG59O1xuXG52YXIgaW5kZXggPSB7XG4gICAgcGFyc2U6IHBhcnNlLFxuICAgIHN0cmluZ2lmeTogc3RyaW5naWZ5XzFcbn07XG5cbkFycmF5LnByb3RvdHlwZS5jbGVhbiA9IGZ1bmN0aW9uIChkZWxldGVWYWx1ZSkge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRpZiAodGhpc1tpXSA9PSBkZWxldGVWYWx1ZSkge1xuXHRcdFx0dGhpcy5zcGxpY2UoaSwgMSk7XG5cdFx0XHRpLS07XG5cdFx0fVxuXHR9XG5cdHJldHVybiB0aGlzO1xufTtcblxuZnVuY3Rpb24gcmVjdXIob2JqLCB0ZW1wbGF0ZSwgd29yZHMpIHtcblx0Ly8gdGVtcGxhdGUgPSAodGVtcGxhdGUgPT0nJyk/ICckJyA6IHRlbXBsYXRlO1xuXHRpZiAob2JqLnR5cGUgPT0gXCJ0ZXh0XCIpIHtcblx0XHRvYmouY29udGVudCA9IG9iai5jb250ZW50LnNwbGl0KC8oPyEkKS8pLm1hcChmdW5jdGlvbiAoY2hhcikge1xuXHRcdFx0cmV0dXJuIHRlbXBsYXRlLnJlcGxhY2UoL1xcJC9nLCBjaGFyKTtcblx0XHR9KS5qb2luKFwiXCIpO1xuXG5cdFx0aWYgKHdvcmRzKSB7XG5cdFx0XHRvYmouY29udGVudCA9IG9iai5jb250ZW50LnNwbGl0KHRlbXBsYXRlLnJlcGxhY2UoL1xcJC9nLCAnICcpKS5jbGVhbihcIlwiKS5tYXAoZnVuY3Rpb24gKHBhcnNlZHdvcmQpIHtcblx0XHRcdFx0cmV0dXJuIHdvcmRzLnJlcGxhY2UoL1xcJC9nLCBwYXJzZWR3b3JkKTtcblx0XHRcdH0pLmpvaW4oXCJcIik7XG5cdFx0fVxuXHR9XG5cdGlmIChvYmouY2hpbGRyZW4pIHtcblx0XHRvYmouY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAodGFnKSB7XG5cdFx0XHRyZWN1cih0YWcsIHRlbXBsYXRlLCB3b3Jkcyk7XG5cdFx0fSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gU3BsaXR0ZXIoaHRtbCwgdGVtcGxhdGUsIHdvcmRzKSB7XG5cdHZhciBhc3QgPSBpbmRleC5wYXJzZShodG1sKTtcblx0YXN0LmZvckVhY2goZnVuY3Rpb24gKHRhZykge1xuXHRcdHJlY3VyKHRhZywgdGVtcGxhdGUsIHdvcmRzKTtcblx0fSk7XG5cdHJldHVybiBpbmRleC5zdHJpbmdpZnkoYXN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTcGxpdHRlcjtcbiIsImltcG9ydCBTcGxpdHRlciBmcm9tICdzcGxpdC1odG1sLXRvLWNoYXJzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR3JhZGllbnRfbGV0dGVycyB7XG4gIGNvbnN0cnVjdG9yKHN0cmluZ19zZWxlY3RvciwgY29sb3Jfc3RhcnQsIGNvbG9yX2VuZCwgb3B0aW9ucykge1xuICAgIHRoaXMuc3RyaW5nX3NlbGVjdG9yID0gc3RyaW5nX3NlbGVjdG9yO1xuICAgIHRoaXMuc3RyaW5nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLnN0cmluZ19zZWxlY3Rvcik7XG4gICAgdGhpcy5jb2xvcl9zdGFydCA9IGNvbG9yX3N0YXJ0O1xuICAgIHRoaXMuY29sb3JfZW5kID0gY29sb3JfZW5kO1xuXG4gICAgdGhpcy5pbml0KCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuc3BsaXRfc3RyaW5nKCk7XG4gICAgdGhpcy5jcmVhdGVfZ3JhZGllbnQoKVxuICB9XG5cbiAgc3BsaXRfc3RyaW5nKCkge1xuICAgIFtdLmZvckVhY2guY2FsbCh0aGlzLnN0cmluZywgZnVuY3Rpb24gKGVsKSB7XG4gICAgICBlbC5vdXRlckhUTUwgPSBTcGxpdHRlcihlbC5vdXRlckhUTUwsICc8c3BhbiBjbGFzcz1cImxldHRlclwiPiQ8L3NwYW4+Jyk7XG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGVfZ3JhZGllbnQoKSB7XG4gICAgbGV0IGVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnN0cmluZ19zZWxlY3RvciksXG4gICAgICAgIGVsX2NoaWxkTm9kZXMgPSBlbC5jaGlsZE5vZGVzLFxuICAgICAgICBlbF9jaGlsZE5vZGVzX2xlbmd0aCA9IGVsLmNoaWxkTm9kZXMubGVuZ3RoLFxuICAgICAgICBjb2xvcl9zdGFydF9oZXggPSB0aGlzLmNvbG9yX3N0YXJ0LnNsaWNlKDEpLFxuICAgICAgICBjb2xvcl9lbmRfaGV4ID0gdGhpcy5jb2xvcl9lbmQuc2xpY2UoMSk7XG5cblxuXG4gICAgbGV0IGNvbG9yX3N0YXJ0X3JnYl9oZXggPSB7XG4gICAgICByOiBjb2xvcl9zdGFydF9oZXhbMF0gKyBjb2xvcl9zdGFydF9oZXhbMV0sXG4gICAgICBnOiBjb2xvcl9zdGFydF9oZXhbMl0gKyBjb2xvcl9zdGFydF9oZXhbM10sXG4gICAgICBiOiBjb2xvcl9zdGFydF9oZXhbNF0gKyBjb2xvcl9zdGFydF9oZXhbNV0sXG4gICAgfTtcblxuICAgIGxldCBjb2xvcl9lbmRfcmdiX2hleCA9IHtcbiAgICAgIHI6IGNvbG9yX2VuZF9oZXhbMF0gKyBjb2xvcl9lbmRfaGV4WzFdLFxuICAgICAgZzogY29sb3JfZW5kX2hleFsyXSArIGNvbG9yX2VuZF9oZXhbM10sXG4gICAgICBiOiBjb2xvcl9lbmRfaGV4WzRdICsgY29sb3JfZW5kX2hleFs1XSxcbiAgICB9O1xuXG5cbiAgICBsZXQgY29sb3Jfc3RhcnRfcmdiID0ge1xuICAgICAgcjogcGFyc2VJbnQoY29sb3Jfc3RhcnRfcmdiX2hleC5yLCAxNiksXG4gICAgICBnOiBwYXJzZUludChjb2xvcl9zdGFydF9yZ2JfaGV4LmcsIDE2KSxcbiAgICAgIGI6IHBhcnNlSW50KGNvbG9yX3N0YXJ0X3JnYl9oZXguYiwgMTYpLFxuICAgIH07XG5cbiAgICBsZXQgY29sb3JfZW5kX3JnYiA9IHtcbiAgICAgIHI6IHBhcnNlSW50KGNvbG9yX2VuZF9yZ2JfaGV4LnIsIDE2KSxcbiAgICAgIGc6IHBhcnNlSW50KGNvbG9yX2VuZF9yZ2JfaGV4LmcsIDE2KSxcbiAgICAgIGI6IHBhcnNlSW50KGNvbG9yX2VuZF9yZ2JfaGV4LmIsIDE2KSxcbiAgICB9O1xuXG4gICAgY29uc29sZS5sb2coIGNvbG9yX3N0YXJ0X3JnYiwgY29sb3JfZW5kX3JnYiApO1xuXG4gICAgbGV0IGRpZmZlcmVuY2UgPSB7XG4gICAgICByOiBjb2xvcl9zdGFydF9yZ2IuciAtIGNvbG9yX2VuZF9yZ2IucixcbiAgICAgIGc6IGNvbG9yX3N0YXJ0X3JnYi5nIC0gY29sb3JfZW5kX3JnYi5nLFxuICAgICAgYjogY29sb3Jfc3RhcnRfcmdiLmIgLSBjb2xvcl9lbmRfcmdiLmIsXG4gICAgfTtcblxuICAgIGxldCBrID0gMS8oZWxfY2hpbGROb2Rlc19sZW5ndGggLSAxKTtcblxuXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVsX2NoaWxkTm9kZXNfbGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICggaSA9PT0gMCAgKSB7XG4gICAgICAgIGVsX2NoaWxkTm9kZXNbaV0uc3R5bGUuY29sb3IgPSBgcmdiKCR7Y29sb3Jfc3RhcnRfcmdiLnJ9LCAke2NvbG9yX3N0YXJ0X3JnYi5nfSwgJHtjb2xvcl9zdGFydF9yZ2IuYn0gKWA7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBsZXQgY29sb3IgPSB7XG4gICAgICAgIHI6IGNvbG9yX3N0YXJ0X3JnYi5yIC0gKGRpZmZlcmVuY2UuciAqKGsgKiAoaSkgKSksXG4gICAgICAgIGc6IGNvbG9yX3N0YXJ0X3JnYi5nIC0gKGRpZmZlcmVuY2UuZyAqKGsgKiAoaSkgKSksXG4gICAgICAgIGI6IGNvbG9yX3N0YXJ0X3JnYi5iIC0gKGRpZmZlcmVuY2UuYiAqKGsgKiAoaSkgKSksXG4gICAgICB9O1xuXG4gICAgICBlbF9jaGlsZE5vZGVzW2ldLnN0eWxlLmNvbG9yID0gYHJnYigke2NvbG9yLnJ9LCAke2NvbG9yLmd9LCAke2NvbG9yLmJ9IClgO1xuICAgIH1cblxuICB9XG5cbn1cblxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3ByaXRlX2FuaW1hdGlvbiB7XG4gIGNvbnN0cnVjdG9yKGFyZ3MpIHtcbiAgICB0aGlzLmNvbnRhaW5lciA9IGFyZ3MuY29udGFpbmVyO1xuICAgIHRoaXMuaW1nID0gYXJncy5pbWc7XG4gICAgdGhpcy5pbWdfd2lkdGggPSBhcmdzLmltZ193aWR0aDtcbiAgICB0aGlzLmltZ19oZWlnaHQgPSBhcmdzLmltZ19oZWlnaHQ7XG4gICAgdGhpcy5jb2wgPSBhcmdzLmNvbDtcbiAgICB0aGlzLnJvdyA9IGFyZ3Mucm93O1xuICAgIHRoaXMuc2NhbGUgPSBhcmdzLnNjYWxlIHx8IDE7XG4gICAgdGhpcy5jbGFzc2VzID0gYXJncy5jbGFzcyA/IGFyZ3MuY2xhc3Muc3BsaXQoJyAnKSA6ICcnO1xuICAgIHRoaXMuc3BlZWQgPSBhcmdzLnNwZWVkIHx8IDUwO1xuXG4gICAgdGhpcy5pbml0KCk7XG4gIH1cblxuICBhZGRfY29udGFpbmVyX3N0eWxlKCkge1xuICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLndpZHRoID0gYCR7KHRoaXMuaW1nX3dpZHRoIC8gdGhpcy5jb2wpKnRoaXMuc2NhbGV9cHhgO1xuICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmhlaWdodCA9IGAkeyh0aGlzLmltZ19oZWlnaHQgLyB0aGlzLnJvdykqdGhpcy5zY2FsZX1weGA7XG4gICAgdGhpcy5jb250YWluZXIuc3R5bGUucG9zaXRpb24gPSBgcmVsYXRpdmVgO1xuICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLm92ZXJmbG93ID0gYGhpZGRlbmA7XG4gIH1cblxuICBjcmVhdGVfc3ByaXRlKCkge1xuICAgIGxldCBzcHJpdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBzcHJpdGUuc3R5bGUud2lkdGggPSBgJHsxMDAgKiB0aGlzLmNvbH0lYDtcbiAgICBzcHJpdGUuc3R5bGUuaGVpZ2h0ID0gYCR7MTAwICogdGhpcy5yb3d9JWA7XG4gICAgc3ByaXRlLnN0eWxlLnBvc2l0aW9uID0gYGFic29sdXRlYDtcbiAgICBzcHJpdGUuc3R5bGUudG9wID0gYDBgO1xuICAgIHNwcml0ZS5zdHlsZS5sZWZ0ID0gYDBgO1xuICAgIHNwcml0ZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHRoaXMuaW1nKTtcbiAgICBzcHJpdGUuY2xhc3NMaXN0LmFkZChgc3ByaXRlX2FuaW1hdGlvbmApO1xuXG4gICAgaWYgKCB0aGlzLmNsYXNzZXNbMF0gIT0gJycgKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuY2xhc3Nlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBzcHJpdGUuY2xhc3NMaXN0LmFkZCh0aGlzLmNsYXNzZXNbaV0pO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZChzcHJpdGUpO1xuICAgIHRoaXMuc3ByaXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNwcml0ZV9hbmltYXRpb24nKTtcbiAgfVxuXG4gIGFuaW1hdGlvbigpIHtcblxuICAgIGxldCBjb3VudGVyID0gMDtcbiAgICBsZXQgbm93X2NvbCA9IDA7XG4gICAgbGV0IG5vd19yb3cgPSAwO1xuICAgIGxldCBpdGVyYXRpb24gPSB0aGlzLmNvbCAqIHRoaXMucm93O1xuICAgIGxldCBzcHJpdGVfd2lkdGggPSAodGhpcy5pbWdfd2lkdGgvdGhpcy5jb2wpKnRoaXMuc2NhbGU7XG4gICAgbGV0IHNwcml0ZV9oZWlnaHQgPSAodGhpcy5pbWdfaGVpZ2h0L3RoaXMucm93KSp0aGlzLnNjYWxlO1xuXG5cbiAgICBsZXQgZ29fYW5pbWF0aW9uID0gKCkgPT4ge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuc3ByaXRlLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzRCgkey1zcHJpdGVfd2lkdGgqbm93X2NvbH1weCwgJHstc3ByaXRlX2hlaWdodCpub3dfcm93fXB4LCAwKWA7XG5cblxuICAgICAgICBpZiAoIG5vd19jb2wgPT09IHRoaXMuY29sIC0gMSApIHtcbiAgICAgICAgICBub3dfY29sID0gMDtcbiAgICAgICAgICBub3dfcm93Kys7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbm93X2NvbCsrO1xuICAgICAgICB9XG5cblxuXG4gICAgICAgIGNvdW50ZXIrKztcbiAgICAgICAgaWYgKCBjb3VudGVyIDwgaXRlcmF0aW9uICkge1xuICAgICAgICAgIGdvX2FuaW1hdGlvbigpO1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzLnNwZWVkKTtcbiAgICB9O1xuXG4gICAgZ29fYW5pbWF0aW9uKCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIHRoaXMuYWRkX2NvbnRhaW5lcl9zdHlsZSgpO1xuICAgIHRoaXMuY3JlYXRlX3Nwcml0ZSgpO1xuICAgIHRoaXMuYW5pbWF0aW9uKCk7XG4gIH1cbn1cbiIsImltcG9ydCBHcmFkaWVudCBmcm9tICcuL0dyYWRpZW50JztcbmltcG9ydCBTcHJpdGVfYW5pbWF0aW9uIGZyb20gJy4vU3ByaXRlX2FuaW1hdGlvbic7XG5cblxubGV0IHRpdGxlX2FuaW1hdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZXJvX19sb29rYm9vay1kZXNrdG9wJyk7XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICBuZXcgU3ByaXRlX2FuaW1hdGlvbih7XG4gICAgY29udGFpbmVyOiB0aXRsZV9hbmltYXRpb24sXG4gICAgaW1nOiAnLi9pbWFnZXMvc3ByaXRlL3Nwcml0ZS1sb29rYm9vay5wbmcnLFxuICAgIGltZ193aWR0aDoxNjE0LFxuICAgIGltZ19oZWlnaHQ6IDE2ODAwLFxuICAgIGNvbDogMixcbiAgICByb3c6IDQyLFxuICAgIHNjYWxlOiAxLFxuICAgIHNwZWVkOiAzNVxuICB9KTtcbn0pO1xuXG4iXX0="}